{"version":3,"file":"static/js/418.945673f0.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","webpack://goit-react-hw-08-phonebook/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-hw-08-phonebook/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.jsx","redux/contacts/contactsSelectors.js","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"Section_heading__6xxr-\"};","import styles from './Section.module.css';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Section = ({ title, children }) => {\n  const { heading } = styles;\n\n  return (\n    <section>\n      <h2 className={heading}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"form__field\":\"ContactForm_form__field__BGZZB\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\"};","import PropTypes from 'prop-types';\nimport styles from './Button.module.css';\n\nexport const Button = ({ type,title, onClick }) => {\n  const { button } = styles;\n\n  return (\n    <button className={button} onClick={onClick} type={type}>\n      {title}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  type: PropTypes.string\n};\n","import styles from './ContactForm.module.css';\nimport { Button } from 'components/Button/Button';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nconst ContactForm = () => {\n  const { form, form__field, label, input } = styles;\n\n  const dispatch = useDispatch();\n\n  const onSubmit = values => {\n    dispatch(addContact(values));\n  };\n\n\n  return (\n    <form className={form} onSubmit={onSubmit}>\n      <div className={form__field}>\n        <label htmlFor=\"contactName\" className={label}>\n          Name\n        </label>\n        <input\n          className={input}\n          id=\"contactName\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </div>\n      <div className={form__field}>\n        <label htmlFor=\"contactTel\" className={label}>\n          Phone number\n        </label>\n        <input\n          className={input}\n          id=\"contactTel\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n      <Button\n        type=\"submit\"\n        title= 'Add contact'\n      ></Button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactList_wrapper__VP-XU\",\"text\":\"ContactList_text__+NWAW\",\"button\":\"ContactList_button__7kL4l\"};","// extracted by mini-css-extract-plugin\nexport default {\"notification__msg\":\"Notification_notification__msg__PruAn\"};","import PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nexport const Notification = ({ message }) => {\n  const { notification__msg } = styles;\n\n  return <p className={notification__msg}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.contacts.filter;\n","import styles from './ContactList.module.css';\nimport { Notification } from 'components/Notification/Notification';\nimport { useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { FiDelete } from 'react-icons/fi';\nimport { selectContacts, selectFilter } from 'redux/contacts/contactsSelectors';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n\nconst ContactList = () => {\n  const { wrapper, text, button } = styles;\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filteredContacts = useMemo(() => {\n    return contacts.filter(c => c.name.toLowerCase().includes(filter));\n  }, [contacts, filter]);\n\n  return (\n    <>\n      {filteredContacts.length !== 0 ? (\n        <ul className={wrapper}>\n          {filteredContacts.map(contact => {\n            return (\n              <li className={text} key={nanoid()}>\n                <span>\n                  {`${contact.name}:\n               ${contact.phone}`}\n                </span>\n                <button\n                  type=\"button\"\n                  className={button}\n                  onClick={() => dispatch(deleteContact(contact.id))}\n                >\n                 < FiDelete/>\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <Notification message=\"Your phonebook is empty\" />\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"Filter_field__IlYZE\",\"text\":\"Filter_text__uqQRu\",\"input\":\"Filter_input__N7T3z\"};","import styles from './Filter.module.css';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/contactsSlice';\n\nconst Filter = () => {\n  const { field, text, input } = styles;\n\n  const dispatch = useDispatch();\n\n  const filterValue = e => {\n    const value = e.target.value.toLowerCase();\n    dispatch(filterContacts(value));\n  };\n\n  return (\n    <div className={field}>\n      <p className={text}>Find contact by name</p>\n      <input className={input} type=\"text\" onChange={filterValue} />\n    </div>\n  );\n};\n\nexport default Filter;\n","\nimport Section from '../../components/Section/Section';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport React from 'react';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      </Section>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["title","children","heading","styles","className","Button","type","onClick","button","form","form__field","label","input","dispatch","useDispatch","onSubmit","values","addContact","htmlFor","id","name","pattern","required","Notification","message","notification__msg","selectContacts","state","contacts","items","selectFilter","filter","wrapper","text","useSelector","filteredContacts","useMemo","c","toLowerCase","includes","length","map","contact","phone","deleteContact","nanoid","field","onChange","e","value","target","filterContacts"],"sourceRoot":""}
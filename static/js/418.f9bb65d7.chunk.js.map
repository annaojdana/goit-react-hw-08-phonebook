{"version":3,"file":"static/js/418.f9bb65d7.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","webpack://goit-react-hw-08-phonebook/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-hw-08-phonebook/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"Section_heading__6xxr-\",\"wrapper\":\"Section_wrapper__KwRRs\"};","import styles from './Section.module.css';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Section = ({ title, children }) => {\n  const { heading, wrapper } = styles;\n\n  return (\n    <section className={wrapper}>\n      <h2 className={heading}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"form__field\":\"ContactForm_form__field__BGZZB\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\"};","import PropTypes from 'prop-types';\nimport styles from './Button.module.css';\n\nexport const Button = ({ type,title, onClick }) => {\n  const { button } = styles;\n\n  return (\n    <button className={button} onClick={onClick} type={type}>\n      {title}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  type: PropTypes.string\n};\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.contacts.filter;\n","import styles from './ContactForm.module.css';\nimport { Button } from 'components/Button/Button';\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nconst ContactForm = () => {\n  const { form, form__field, label, input } = styles;\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    if (contacts.some(contact => contact.number === number)) {\n      const [filteredNumber] = contacts.filter(\n        contact => contact.number === number\n      );\n      alert(`${number} is already in contact with ${filteredNumber.name} `);\n      return;\n    }\n\n    try {\n      await dispatch(\n        addContact({\n          name,\n          number,\n        })\n      );\n    } catch (error) {\n      alert(`Failed to save the contact`);\n    }\n    form.reset();\n  };\n\n  return (\n    <form className={form} onSubmit={onSubmit}>\n      <div className={form__field}>\n        <label htmlFor=\"contactName\" className={label}>\n          Name\n        </label>\n        <input\n          className={input}\n          id=\"contactName\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </div>\n      <div className={form__field}>\n        <label htmlFor=\"contactTel\" className={label}>\n          Phone number\n        </label>\n        <input\n          className={input}\n          id=\"contactTel\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n      <Button type=\"submit\" title=\"Add contact\"></Button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactList_wrapper__VP-XU\",\"text\":\"ContactList_text__+NWAW\",\"button\":\"ContactList_button__7kL4l\"};","// extracted by mini-css-extract-plugin\nexport default {\"notification__msg\":\"Notification_notification__msg__PruAn\"};","import PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nexport const Notification = ({ message }) => {\n  const { notification__msg } = styles;\n\n  return <p className={notification__msg}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import styles from './ContactList.module.css';\nimport { Notification } from 'components/Notification/Notification';\nimport { useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { FiDelete } from 'react-icons/fi';\nimport {\n  selectContacts,\n  selectFilter,\n  selectIsLoading,\n} from 'redux/contacts/contactsSelectors';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport Loader from 'components/Loader/Loader';\n\nconst ContactList = () => {\n  const { wrapper, text, button } = styles;\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const filter = useSelector(selectFilter);\n\n  const filteredContacts = useMemo(() => {\n    return contacts.filter(c => c.name.toLowerCase().includes(filter));\n  }, [contacts, filter]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : filteredContacts.length !== 0 ? (\n        <ul className={wrapper}>\n          {filteredContacts.map(contact => {\n            return (\n              <li className={text} key={nanoid()}>\n                <span>\n                  {`${contact.name}:\n               ${contact.number}`}\n                </span>\n                <button\n                  type=\"button\"\n                  className={button}\n                  onClick={() => dispatch(deleteContact(contact.id))}\n                >\n                  <FiDelete />\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <Notification message=\"Your phonebook is empty\" />\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"Filter_field__IlYZE\",\"text\":\"Filter_text__uqQRu\",\"input\":\"Filter_input__N7T3z\"};","import styles from './Filter.module.css';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/contactsSlice';\n\nconst Filter = () => {\n  const { field, text, input } = styles;\n\n  const dispatch = useDispatch();\n\n  const filterValue = e => {\n    const value = e.target.value.toLowerCase();\n    dispatch(filterContacts(value));\n  };\n\n  return (\n    <div className={field}>\n      <p className={text}>Find contact by name</p>\n      <input className={input} type=\"text\" onChange={filterValue} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Section from '../../components/Section/Section';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport React from 'react';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\nimport { selectIsLoading } from 'redux/contacts/contactsSelectors';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport Loader from 'components/Loader/Loader';\nimport { useAuth } from 'hooks';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const { user } = useAuth();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Section title={`Welcome ${user.name} in your phonebook`}>\n        <ContactForm />\n      </Section>\n      <Section title=\"Your contacts\">\n        <>\n          <Filter />\n          {isLoading ? <Loader /> : <ContactList />}\n        </>\n      </Section>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["title","children","heading","styles","wrapper","className","Button","type","onClick","button","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","form","form__field","label","input","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","target","name","value","number","some","contact","alert","filteredNumber","addContact","reset","htmlFor","id","pattern","required","Notification","message","notification__msg","text","filteredContacts","useMemo","c","toLowerCase","includes","Loader","length","map","deleteContact","nanoid","field","onChange","filterContacts","user","useAuth","useEffect","fetchContacts"],"sourceRoot":""}
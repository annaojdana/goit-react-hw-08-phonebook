{"version":3,"file":"static/js/997.3c9e4d09.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","webpack://goit-react-hw-08-phonebook/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-hw-08-phonebook/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"Section_heading__6xxr-\"};","import styles from './Section.module.css';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Section = ({ title, children }) => {\n  const { heading } = styles;\n\n  return (\n    <section>\n      <h2 className={heading}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"form__field\":\"ContactForm_form__field__BGZZB\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\"};","import PropTypes from 'prop-types';\nimport styles from './Button.module.css';\n\nexport const Button = ({ type,title, onClick }) => {\n  const { button } = styles;\n\n  return (\n    <button className={button} onClick={onClick} type={type}>\n      {title}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  type: PropTypes.string\n};\n","import styles from './ContactForm.module.css';\nimport { Button } from 'components/Button/Button';\nimport React from 'react';\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from 'services/contactsApi';\n\nconst ContactForm = () => {\n  const { form, form__field, label, input } = styles;\n\n  const { data: contacts = [] } = useGetContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    if (contacts.some(contact => contact.phone === number)) {\n      const [filteredNumber] = contacts.filter(\n        contact => contact.phone === number\n      );\n      alert(`${number} is already in contact with ${filteredNumber.name} `);\n      return;\n    }\n\n    try {\n      await addContact({\n        name,\n        phone: number,\n      });\n    } catch (error) {\n      alert(`Failed to save the contact`);\n    }\n    form.reset();\n  };\n\n  return (\n    <form className={form} onSubmit={onSubmit}>\n      <div className={form__field}>\n        <label htmlFor=\"contactName\" className={label}>\n          Name\n        </label>\n        <input\n          className={input}\n          id=\"contactName\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </div>\n      <div className={form__field}>\n        <label htmlFor=\"contactTel\" className={label}>\n          Phone number\n        </label>\n        <input\n          className={input}\n          id=\"contactTel\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n      <Button\n        type=\"submit\"\n        title={isLoading ? 'Adding...' : 'Add contact'}\n      ></Button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactList_wrapper__VP-XU\",\"text\":\"ContactList_text__+NWAW\",\"button\":\"ContactList_button__7kL4l\"};","// extracted by mini-css-extract-plugin\nexport default {\"notification__msg\":\"Notification_notification__msg__PruAn\"};","import PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nexport const Notification = ({ message }) => {\n  const { notification__msg } = styles;\n\n  return <p className={notification__msg}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Loader_item__iys6Z\"};","import React from 'react';\nimport { ColorRing } from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nconst Loader = () => {\n  const { item } = styles;\n  \n  return (\n    <div className={item}>\n      <ColorRing\n        visible={true}\n        height=\"150\"\n        width=\"150\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import styles from './ContactList.module.css';\nimport { Notification } from 'components/Notification/Notification';\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport Loader from 'components/Loader/Loader';\nimport {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n} from 'services/contactsApi';\n\nconst ContactList = () => {\n  const { wrapper, text, button } = styles;\n\n  const {\n    data: contacts = [],\n    isLoading,\n    isSuccess,\n    isError,\n    error,\n  } = useGetContactsQuery();\n\n  const filter = useSelector(state => state.filter);\n  const [deleteItemContact] = useDeleteContactMutation();\n\n  const filteredContacts = useMemo(() => {\n    return contacts.filter(c => c.name.toLowerCase().includes(filter));\n  }, [contacts, filter]);\n\n  let content;\n\n  if (isLoading) {\n    content = <Loader />;\n  } else if (isSuccess) {\n    filteredContacts.length !== 0\n      ? (content = (\n          <ul className={wrapper}>\n            {filteredContacts.map(contact => {\n              return (\n                <li className={text} key={nanoid()}>\n                  <span>\n                    {`${contact.name}:\n               ${contact.phone}`}\n                  </span>\n                  <button\n                    type=\"button\"\n                    className={button}\n                    onClick={() => deleteItemContact({ id: contact.id })}\n                  >\n                    Delete\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        ))\n      : (content = <Notification message=\"Your phonebook is empty\" />);\n  } else if (isError) {\n    content = <Notification message={error} />;\n  }\n\n  return <>{content}</>;\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"Filter_field__IlYZE\",\"text\":\"Filter_text__uqQRu\",\"input\":\"Filter_input__N7T3z\"};","import styles from './Filter.module.css';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/slices/filterSlice';\n\n\nconst Filter = () => {\n  const { field, text, input } = styles;\n\n  const dispatch = useDispatch();\n\n  const filterValue = e => {\n    const value = e.target.value.toLowerCase();\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div className={field}>\n      <p className={text}>Find contact by name</p>\n      <input className={input} type=\"text\" onChange={filterValue} />\n    </div>\n  );\n};\n\nexport default Filter;\n","\nimport Section from '../../components/Section/Section';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport React from 'react';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      </Section>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["title","children","heading","styles","className","Button","type","onClick","button","form","form__field","label","input","useGetContactsQuery","data","contacts","useAddContactMutation","addContact","isLoading","onSubmit","e","preventDefault","target","name","value","number","some","contact","alert","phone","filter","filteredNumber","reset","htmlFor","id","pattern","required","Notification","message","notification__msg","item","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","content","wrapper","text","isSuccess","isError","error","useSelector","state","useDeleteContactMutation","deleteItemContact","filteredContacts","useMemo","c","toLowerCase","includes","length","map","nanoid","field","dispatch","useDispatch","onChange","setFilter"],"sourceRoot":""}